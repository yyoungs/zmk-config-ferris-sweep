/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#undef ZMK_BEHAVIORS_KEEP_ALL

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W       &kp E           &kp R        &kp T              &kp Y        &kp U        &kp I            &kp O       &kp P
&hm LEFT_CONTROL A  &hm LALT S  &hm LEFT_GUI D  &hm LSHFT F  &lt 5 G            &lt 5 H      &hm RSHFT J  &hm RIGHT_GUI K  &hm LALT L  &hm RIGHT_CONTROL APOSTROPHE
&kp Z               &kp X       &kp C           &kp V        &kp B              &kp N        &kp M        &kp COMMA        &kp DOT     &kp FSLH
                                                &lt 3 TAB    &lt 1 BACKSPACE    &lt 4 SPACE  &lt 2 ENTER
            >;
        };

        nav_layer {
            bindings = <
&kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(LS(Z))    &trans              &kp PAGE_UP    &kp UP    &trans     &kp DELETE
&trans     &trans     &trans     &trans     &trans           &kp RG(LEFT_ARROW)  &kp LEFT       &kp DOWN  &kp RIGHT  &kp RG(RIGHT_ARROW)
&trans     &trans     &trans     &trans     &trans           &trans              &kp PAGE_DOWN  &trans    &trans     &trans
                                 &trans     &trans           &trans              &trans
            >;
        };

        left_num {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &kp C_VOLUME_UP    &trans  &trans  &trans  &trans  &trans
&kp F11  &kp F4  &kp F5  &kp F6  &kp K_MUTE         &trans  &trans  &trans  &trans  &trans
&kp F10  &kp F1  &kp F2  &kp F3  &kp C_VOL_DN       &trans  &trans  &trans  &trans  &trans
                         &trans  &trans             &trans  &trans
            >;
        };

        right_num {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans   &kp N7  &kp N8  &kp N9  &trans
&trans  &trans  &trans  &trans  &trans    &kp DOT  &kp N4  &kp N5  &kp N6  &trans
&trans  &trans  &trans  &trans  &trans    &kp N0   &kp N1  &kp N2  &kp N3  &trans
                        &trans  &trans    &trans   &kp N0
            >;
        };

        left_mods {
            bindings = <
&kp ESC   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&kp CAPS  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans    &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                          &trans  &trans    &trans  &trans
            >;
        };

//         left_symbols {
//             bindings = <
// &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH           &kp DOLLAR            &kp PERCENT              &trans  &trans  &trans  &trans  &trans
// &kp RS(NUBS)     &kp LESS_THAN      &kp GREATER_THAN   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans
// &kp NUBS         &kp LEFT_BRACKET   &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE          &trans  &trans  &trans  &trans  &trans
//                                                        &trans                &trans                   &trans  &trans
//             >;
//         };
// 
//         right_symbols {
//             bindings = <
// &trans  &trans  &trans  &trans  &trans    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp TILDE  &kp NON_US_HASH
// &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp EQUAL      &trans        &kp GRAVE  &kp RS(SEMICOLON)
// &trans  &trans  &trans  &trans  &trans    &kp UNDER  &kp PLUS       &trans        &trans     &kp SEMICOLON
//                         &trans  &trans    &trans     &trans
//             >;
//         };

        symbols {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH           &kp DOLLAR            &kp PERCENT               &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp TILDE  &kp NON_US_HASH
&kp RS(NUBS)     &kp LESS_THAN      &kp GREATER_THAN   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp MINUS  &kp EQUAL      &trans        &kp GRAVE  &kp RS(SEMICOLON)
&kp NUBS         &kp LEFT_BRACKET   &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE           &kp UNDER  &kp PLUS       &trans        &trans     &kp SEMICOLON
                                                       &trans                &trans                    &trans     &trans
            >;
        };
    };
};
